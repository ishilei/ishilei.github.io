<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>地球太冷</title><link href="http://www.ishilei.com/" rel="alternate"></link><link href="http://www.ishilei.com/feeds/technology.atom.xml" rel="self"></link><id>http://www.ishilei.com/</id><updated>2014-11-03T19:44:00+08:00</updated><entry><title>教程：使用Pelican和Github Pages搭建个人博客</title><link href="http://www.ishilei.com/pages/2014/11/03/creat-blog.html" rel="alternate"></link><updated>2014-11-03T19:44:00+08:00</updated><author><name>shilei</name></author><id>tag:www.ishilei.com,2014-11-03:pages/2014/11/03/creat-blog.html</id><summary type="html">&lt;h5&gt;前言&lt;/h5&gt;
&lt;p&gt;近段时间有了想搭建个人博客的冲动，因此也看了不少利用&lt;font color='red'&gt;Pelican&lt;/font&gt;和&lt;font color='red'&gt;Github Pages&lt;/font&gt;搭建博客的教程，但是完全按照教程去做，总会出现一些教程中没有提到的问题。因此，把自己成功搭建的过程也分享一下。&lt;/p&gt;
&lt;h5&gt;基础&lt;/h5&gt;
&lt;p&gt;1.搭建博客之前最好掌握git的基本操作，这样会让你在搭建的时候少很多困惑，比如一些基本的git命令，知道它的作用会对搭建博客以及以后博客的更新起到很大的作用。在此强烈推荐progit，不需要看完整本书，只需要了解其基本的操作命令。电子版链接&lt;a href="http://git-scm.com/book/zh/v1"&gt;progit&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;2.pelican和github可自行搜索相关资料进行了解。博客写作编辑器markdown自行学习1小时便能搞定。  &lt;/p&gt;
&lt;h5&gt;安装环境&lt;/h5&gt;
&lt;p&gt;ubuntu 14.04&lt;br /&gt;
首先ubuntu就是利用git进行版本控制的，在ubuntu环境搭建基于github的博客系统个人感觉更加简单，更容易上手，用起来也更加方便，当然这得有linux环境操作基础。&lt;/p&gt;
&lt;h5&gt;安装Pelican&lt;/h5&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;pip&lt;/span&gt; &lt;span class="n"&gt;install&lt;/span&gt; &lt;span class="n"&gt;pelican&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;系统一般没有预装pip，因此需要先把pip安装了&lt;br /&gt;
&lt;code&gt;apt-get install pip&lt;/code&gt;  &lt;/p&gt;
&lt;h5&gt;安装markdown&lt;/h5&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;pip&lt;/span&gt; &lt;span class="n"&gt;install&lt;/span&gt; &lt;span class="n"&gt;Markdown&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h5&gt;创建blog目录&lt;/h5&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;mkdir&lt;/span&gt; &lt;span class="n"&gt;blog&lt;/span&gt;
&lt;span class="n"&gt;cd&lt;/span&gt; &lt;span class="n"&gt;blog&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h5&gt;在blog目录下运行下面的命令&lt;/h5&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;pelican&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;quickstart&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;运行此命令后会出现一系列提示，可一直按enter键默认设置，以后可以在pelicanconf.py文件中进行修改。然后会生成一系列文件和目录&lt;br /&gt;
    content目录 存放输入的源文件，以后博客的.md源文件即存放在此目录&lt;br /&gt;
    output 目录 存放生成的的输出文件&lt;br /&gt;
    develop_server.sh 方便开启测试服务器&lt;br /&gt;
    Makefile  方便管理博客的Makefile&lt;br /&gt;
    pelicanconf.py 主配置文件&lt;br /&gt;
    publishconf.py 发布时使用的配置文件&lt;/p&gt;
&lt;h5&gt;写一篇简单的文章&lt;/h5&gt;
&lt;p&gt;首先进入content目录，用markdown生成一个.md的文件,其中文件的内容为:&lt;br /&gt;
    Data : 2014-11-3&lt;br /&gt;
    Title : test&lt;br /&gt;
    Tags : technology&lt;br /&gt;
    Category : technology&lt;br /&gt;
    Author: anyone&lt;/p&gt;
&lt;h5&gt;生成html&lt;/h5&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;make&lt;/span&gt; &lt;span class="n"&gt;publish&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h5&gt;github仓库的准备&lt;/h5&gt;
&lt;p&gt;注册github，然后在Repositories下新建一个username.github.io的仓库，username是你github的用户名。&lt;/p&gt;
&lt;h5&gt;在github上创建GitHub Pages&lt;/h5&gt;
&lt;p&gt;进入blog目录下的output目录：&lt;br /&gt;
&lt;code&gt;git init&lt;/code&gt;&lt;br /&gt;
&lt;code&gt;git add .&lt;/code&gt;&lt;br /&gt;
&lt;code&gt;git commit -m "first commit"&lt;/code&gt;&lt;br /&gt;
&lt;code&gt;git remote add origin https://github.com/X/X.github.io.git&lt;/code&gt;&lt;br /&gt;
&lt;code&gt;git push   origin master&lt;/code&gt;&lt;br /&gt;
倒数第二条命令中的X即github的用户名。如果你已经看过progit的话，就知道这些命令具体做了什么。&lt;/p&gt;
&lt;h5&gt;域名的绑定&lt;/h5&gt;
&lt;ol&gt;
&lt;li&gt;首先买个域名。国内国外都有许多卖域名的网站。本人是在Godaddy上买的，支持支付宝支付。&lt;/li&gt;
&lt;li&gt;将域名与GitHub Pages进行空间绑定。即在username.github.io的根目录下新建一个CNAME的文本文件，里面写入你要绑定的域名。比如我的CNAME文件中内容就是：www.ishilei.com&lt;/li&gt;
&lt;li&gt;DNS的设置。推荐使用DNSpod,免费。&lt;/li&gt;
&lt;/ol&gt;
&lt;h6&gt;这部分内容的在这篇链接&lt;a href="http://blog.csdn.net/poem_of_sunshine/article/details/29369785"&gt;文章&lt;/a&gt;中讲的非常详细,虽然它是用hexo进行搭建，但是域名这一块是完全相同的。&lt;/h6&gt;</summary><category term="github pages"></category><category term="pelican"></category></entry></feed>